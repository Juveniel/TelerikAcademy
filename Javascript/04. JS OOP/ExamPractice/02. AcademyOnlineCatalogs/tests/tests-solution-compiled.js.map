{"version":3,"sources":["tests-solution.js"],"names":[],"mappings":"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","file":"tests-solution-compiled.js","sourcesContent":["/* globals require, describe, it */\nvar expect = require('chai').expect,\n    result = require('../tasks/solution')();\n\n/* beforeach: start */\nvar utils = (function () {\n    var CONSTS = {\n        NAME: {\n            MIN: 2,\n            MAX: 40\n        },\n        DESCRIPTION: {\n            MIN: 1,\n            MAX: 1000\n        },\n        ISBN10: {\n            LENGTH: 10\n        },\n        ISBN13: {\n            LENGTH: 13\n        },\n        GENRE: {\n            MIN: 2,\n            MAX: 20\n        },\n        DURATION: {\n            MIN: 0,\n            MAX: 10000\n        },\n        RATING: {\n            MIN: 1,\n            MAX: 5\n        },\n        CHARS: 'QWERTYUIOPASDFGHJKLZXCVBNM _.-?!,\\'\\\":;',\n        DIGIS: '0123456789'\n    };\n\n    function getRandom(min, max) {\n        if (typeof (max) === 'undefined') {\n            max = min;\n            min = 0;\n        }\n        /* jshint ignore: start */\n        return (Math.random() * (max - min) + min) | 0;\n        /* jshint ignore: end */\n    }\n\n    function getRandomString(chars, length) {\n        return Array.apply(null, {\n            length: length\n        }).map(function () {\n            return chars[getRandom(chars.length)];\n        }).join('');\n    }\n\n    var utils = {\n        valid: {\n            getName: function () {\n                var length = getRandom(CONSTS.NAME.MIN, CONSTS.NAME.MAX);\n                return getRandomString(CONSTS.CHARS, length);\n            },\n            getISBN10: function () {\n                var length = 10;\n                return getRandomString(CONSTS.DIGIS, length);\n            },\n            getISBN13: function () {\n                var length = 13;\n                return getRandomString(CONSTS.DIGIS, length);\n            },\n            getGenre: function () {\n                var length = getRandom(CONSTS.GENRE.MIN, CONSTS.GENRE.MAX);\n                return getRandomString(CONSTS.CHARS, length);\n            },\n            getDescription: function () {\n                var length = getRandom(CONSTS.DESCRIPTION.MIN, CONSTS.DESCRIPTION.MAX);\n                return getRandomString(CONSTS.CHARS, length);\n            },\n            getDuration: function () {\n                return getRandom(0, 1000);\n            },\n            getRating: function () {\n                return getRandom(1, 5);\n            }\n        },\n        invalid: {\n            getShorterName: function () {\n                var length = getRandom(0, CONSTS.NAME.MIN - 1);\n                return getRandomString(CONSTS.CHARS, length);\n            },\n            getLongerName: function () {\n                var length = getRandom(CONSTS.NAME.MAX + 1, CONSTS.NAME.MAX * 2);\n                return getRandomString(CONSTS.CHARS, length);\n            },\n            getInvalidISBN10WithLetters: function () {\n                var isbn = utils.valid.getISBN10().split(''),\n                    index = getRandom(isbn.length);\n                isbn.splice(index, 1, 'a');\n                return isbn;\n            },\n            getInvalidISBN13WithLetters: function () {\n                return utils.valid.getISBN13().substring(1);\n            },\n            getInvalidISBNNot10or13: function () {\n                var isbn = utils.valid.getISBN13().split(''),\n                    index = getRandom(isbn.length);\n                isbn.splice(index, 1, 'a');\n                return isbn;\n            },\n            getShorterDescription: function () {\n                var length = getRandom(0, CONSTS.DESCRIPTION.MIN - 1);\n                return getRandomString(CONSTS.CHARS, length);\n            },\n            getLongerDescription: function () {\n                var length = getRandom(CONSTS.DESCRIPTION.MAX + 1, CONSTS.DESCRIPTION.MAX * 2);\n                return getRandomString(CONSTS.CHARS, length);\n            },\n            getShorterGenre: function () {\n                var length = getRandom(0, CONSTS.GENRE.MIN - 1);\n                return getRandomString(CONSTS.CHARS, length);\n            },\n            getLongerGenre: function () {\n                var length = getRandom(CONSTS.GENRE.MAX + 1, CONSTS.GENRE.MAX * 2);\n                return getRandomString(CONSTS.CHARS, length);\n            },\n            getSmallRating: function () {\n                return 0;\n            },\n            getLargeRating: function () {\n                return getRandom(6, 1000);\n            }\n        }\n    };\n\n    return utils;\n}());\n/* beforeach: end */\n\ndescribe('Academy Catalogs', function () {\n    describe('Book tests', function () {\n        describe('Valid tests', function () {\n            // test 1\n            it('expect getBook to exist, to be a function and to return object with properties unique id, name, description, isbn and ganre', function () {\n                var name,\n                    isbn,\n                    genre,\n                    description,\n                    book,\n                    i,\n                    ids,\n                    count;\n\n                expect(result.getBook).to.exist;\n                expect(result.getBook).to.be.a('function');\n\n                name = utils.valid.getName();\n                isbn = utils.valid.getISBN10();\n                genre = utils.valid.getGenre();\n                description = utils.valid.getDescription();\n\n                book = result.getBook(name, utils.valid.getISBN13(), genre, description);\n                book = result.getBook(name, isbn, genre, description);\n                expect(book).to.be.a('object');\n                expect(book.name).to.be.a('string');\n                expect(book.name).to.equal(name);\n\n                expect(book.isbn).to.be.a('string');\n                expect(book.isbn).to.equal(isbn);\n\n                expect(book.genre).to.be.a('string');\n                expect(book.genre).to.equal(genre);\n\n                expect(book.description).to.be.a('string');\n                expect(book.description).to.equal(description);\n\n                expect(book.id).to.be.a('number');\n                i = 0;\n                count = 10000;\n                ids = {};\n                while (i !== count) {\n                    book = result.getBook(name, isbn, genre, description);\n                    expect(ids[book.id]).to.be.undefined;\n                    ids[book.id] = 1;\n                    i += 1;\n                }\n            });\n        });\n        describe('Invalid tests', function () {\n            // test 2\n            it('Expect invalid name to throw', function () {\n\n                expect(result.getBook).to.exist;\n                function testName_undefined() {\n                    result.getBook(undefined, utils.valid.getISBN10(), utils.valid.getGenre(), utils.valid.getDescription());\n                }\n\n                function testNameSetter_undefined() {\n                    var book = result.getBook(utils.valid.getName(), utils.valid.getISBN10(), utils.valid.getGenre(), utils.valid.getDescription());\n                    book.name = undefined;\n                }\n\n                function testName_null() {\n                    result.getBook(null, utils.valid.getISBN10(), utils.valid.getGenre(), utils.valid.getDescription());\n                }\n\n                function testNameSetter_null() {\n                    var book = result.getBook(utils.valid.getName(), utils.valid.getISBN10(), utils.valid.getGenre(), utils.valid.getDescription());\n                    book.name = null;\n                }\n\n                function testName_EmptyString() {\n                    result.getBook('', utils.valid.getISBN10(), utils.valid.getGenre(), utils.valid.getDescription());\n                }\n\n                function testNameSetter_EmptyString() {\n                    var book = result.getBook(utils.valid.getName(), utils.valid.getISBN10(), utils.valid.getGenre(), utils.valid.getDescription());\n                    book.name = '';\n                }\n\n                function testName_Short() {\n                    result.getBook(utils.invalid.getShorterName(), utils.valid.getISBN10(), utils.valid.getGenre(), utils.valid.getDescription());\n                }\n\n                function testNameSetter_Short() {\n                    var book = result.getBook(utils.valid.getName(), utils.valid.getISBN10(), utils.valid.getGenre(), utils.valid.getDescription());\n                    book.name = utils.invalid.getShorterName();\n                }\n\n                function testName_Long() {\n                    var name = utils.invalid.getLongerName();\n                    var isbn10 = utils.valid.getISBN10();\n                    var genre = utils.valid.getGenre();\n                    var description = utils.valid.getDescription();\n                    result.getBook(name, isbn10, genre, description);\n                }\n\n                function testNameSetter_Long() {\n                    var book = result.getBook(utils.valid.getName(), utils.valid.getISBN10(), utils.valid.getGenre(), utils.valid.getDescription());\n                    book.name = utils.invalid.getLongerName();\n                }\n\n                expect(result.getBook).to.exist;\n                expect(testName_undefined).to.throw();\n                expect(testNameSetter_undefined).to.throw();\n                expect(testName_null).to.throw();\n                expect(testNameSetter_null).to.throw();\n                expect(testName_EmptyString).to.throw();\n                expect(testNameSetter_EmptyString).to.throw();\n                expect(testName_Short).to.throw();\n                expect(testNameSetter_Short).to.throw();\n                expect(testName_Long).to.throw();\n                expect(testNameSetter_Long).to.throw();\n            });\n            // test 3\n            it('Expect invalid isbn to throw', function () {\n                function testISBN_undefined() {\n                    result.getBook(utils.valid.getName(), undefined, utils.valid.getGenre(), utils.valid.getDescription());\n                }\n\n                function testISBNSetter_undefined() {\n                    var book = result.getBook(utils.valid.getName(), utils.valid.getISBN10(), utils.valid.getGenre(), utils.valid.getDescription());\n                    book.isbn = undefined;\n                }\n\n                function testISBN_null() {\n                    result.getBook(utils.valid.getName(), null, utils.valid.getGenre(), utils.valid.getDescription());\n                }\n\n                function testISBNSetter_null() {\n                    var book = result.getBook(utils.valid.getName(), utils.valid.getISBN10(), utils.valid.getGenre(), utils.valid.getDescription());\n                    book.isbn = null;\n                }\n\n                function testISBN_EmptyString() {\n                    result.getBook(utils.valid.getName(), '', utils.valid.getGenre(), utils.valid.getDescription());\n                }\n\n                function testISBNSetter_EmptyString() {\n                    var book = result.getBook(utils.valid.getName(), utils.valid.getISBN10(), utils.valid.getGenre(), utils.valid.getDescription());\n                    book.isbn = '';\n                }\n\n                function testISBN_10WithLetters() {\n                    result.getBook(utils.valid.getName, utils.invalid.getInvalidISBN10WithLetters(), utils.valid.getGenre(), utils.valid.getDescription());\n                }\n\n                function testISBNSetter_10WithLetters() {\n                    var book = result.getBook(utils.valid.getName(), utils.valid.getISBN10(), utils.valid.getGenre(), utils.valid.getDescription());\n                    book.isbn = utils.invalid.getInvalidISBN10WithLetters();\n                }\n\n                function testISBN_13WithLetters() {\n                    result.getBook(utils.valid.getName, utils.invalid.getInvalidISBN13WithLetters(), utils.valid.getGenre(), utils.valid.getDescription());\n                }\n\n                function testISBNSetter_13WithLetters() {\n                    var book = result.getBook(utils.valid.getName(), utils.valid.getISBN13(), utils.valid.getGenre(), utils.valid.getDescription());\n                    book.isbn = utils.invalid.getInvalidISBN13WithLetters();\n                }\n\n                function testISBN_not10or13() {\n                    result.getBook(utils.valid.getName, utils.invalid.getInvalidISBNNot10or13(), utils.valid.getGenre(), utils.valid.getDescription());\n                }\n\n                function testISBNSetter_not10or13() {\n                    var book = result.getBook(utils.valid.getName(), utils.valid.getISBN13(), utils.valid.getGenre(), utils.valid.getDescription());\n                    book.isbn = utils.invalid.getInvalidISBNNot10or13();\n                }\n\n                expect(result.getBook).to.exist;\n                expect(testISBN_undefined).to.throw();\n                expect(testISBNSetter_undefined).to.throw();\n                expect(testISBN_null).to.throw();\n                expect(testISBNSetter_null).to.throw();\n                expect(testISBN_EmptyString).to.throw();\n                expect(testISBNSetter_EmptyString).to.throw();\n                expect(testISBN_10WithLetters).to.throw();\n                expect(testISBNSetter_10WithLetters).to.throw();\n                expect(testISBN_13WithLetters).to.throw();\n                expect(testISBNSetter_13WithLetters).to.throw();\n                expect(testISBN_not10or13).to.throw();\n                expect(testISBNSetter_not10or13).to.throw();\n            });\n            // test 4\n            it('Expect invalid genre to throw', function () {\n                function testGenre_undefined() {\n                    result.getBook(utils.valid.getName(), utils.valid.getISBN10(), undefined, utils.valid.getDescription());\n                }\n\n                function testGenreSetter_undefined() {\n                    var book = result.getBook(utils.valid.getName(), utils.valid.getISBN10(), utils.valid.getGenre(), utils.valid.getDescription());\n                    book.genre = undefined;\n                }\n\n                function testGenre_null() {\n                    result.getBook(utils.valid.getName(), utils.valid.getISBN10(), null, utils.valid.getDescription());\n                }\n\n                function testGenreSetter_null() {\n                    var book = result.getBook(utils.valid.getName(), utils.valid.getISBN10(), utils.valid.getGenre(), utils.valid.getDescription());\n                    book.genre = null;\n                }\n\n                function testGenre_EmptyString() {\n                    result.getBook(utils.valid.getName(), utils.valid.getISBN10(), '', utils.valid.getDescription());\n                }\n\n                function testGenreSetter_EmptyString() {\n                    var book = result.getBook(utils.valid.getName(), utils.valid.getISBN10(), utils.valid.getGenre(), utils.valid.getDescription());\n                    book.genre = '';\n                }\n\n                function testGenre_Short() {\n                    result.getBook(utils.valid.getName(), utils.valid.getISBN10(), utils.invalid.getShorterGenre(), utils.valid.getDescription());\n                }\n\n                function testGenreSetter_Short() {\n                    var book = result.getBook(utils.valid.getName(), utils.valid.getISBN10(), utils.valid.getGenre(), utils.valid.getDescription());\n                    book.genre = utils.invalid.getShorterGenre();\n                }\n\n                function testGenre_Long() {\n                    var name = utils.valid.getName();\n                    var isbn10 = utils.valid.getISBN10();\n                    var genre = utils.invalid.getLongerGenre();\n                    var description = utils.valid.getDescription();\n                    result.getBook(name, isbn10, genre, description);\n                }\n\n                function testGenreSetter_Long() {\n                    var book = result.getBook(utils.valid.getName(), utils.valid.getISBN10(), utils.valid.getGenre(), utils.valid.getDescription());\n                    book.genre = utils.invalid.getLongerGenre();\n                }\n\n                expect(result.getBook).to.exist;\n                expect(testGenre_undefined).to.throw();\n                expect(testGenreSetter_undefined).to.throw();\n                expect(testGenre_null).to.throw();\n                expect(testGenreSetter_null).to.throw();\n                expect(testGenre_EmptyString).to.throw();\n                expect(testGenreSetter_EmptyString).to.throw();\n                expect(testGenre_Short).to.throw();\n                expect(testGenreSetter_Short).to.throw();\n                expect(testGenre_Long).to.throw();\n                expect(testGenreSetter_Long).to.throw();\n            });\n            // test 5\n            it('Expect invalid description to throw', function () {\n\n                function testDescription_undefined() {\n                    result.getBook(utils.valid.getName(), utils.valid.getISBN10(), utils.valid.getGenre(), undefined);\n                }\n\n                function testDescriptionSetter_undefined() {\n                    var book = result.getBook(utils.valid.getName(), utils.valid.getISBN10(), utils.valid.getGenre(), utils.valid.getDescription());\n                    book.description = undefined;\n                }\n\n                function testDescription_null() {\n                    result.getBook(utils.valid.getName(), utils.valid.getISBN10(), utils.valid.getGenre(), null);\n                }\n\n                function testDescriptionSetter_null() {\n                    var book = result.getBook(utils.valid.getName(), utils.valid.getISBN10(), utils.valid.getGenre(), utils.valid.getDescription());\n                    book.description = null;\n                }\n\n                function testDescription_EmptyString() {\n                    result.getBook(utils.valid.getName(), utils.valid.getISBN10(), utils.valid.getGenre(), '');\n                }\n\n                function testDescriptionSetter_EmptyString() {\n                    var book = result.getBook(utils.valid.getName(), utils.valid.getISBN10(), utils.valid.getGenre(), utils.valid.getDescription());\n                    book.genre = '';\n                }\n\n                expect(result.getMedia).to.exist;\n                expect(testDescription_undefined).to.throw();\n                expect(testDescriptionSetter_undefined).to.throw();\n                expect(testDescription_null).to.throw();\n                expect(testDescriptionSetter_null).to.throw();\n                expect(testDescription_EmptyString).to.throw();\n                expect(testDescriptionSetter_EmptyString).to.throw();\n            });\n        });\n    });\n\n    describe('Media tests', function () {\n        describe('Valid tests', function () {\n            // test 6\n            it('expect getMedia to exist, to be a function and to return object with properties unique id, name, description, duration and rating', function () {\n                var name,\n                    duration,\n                    rating,\n                    description,\n                    media,\n                    i,\n                    ids,\n                    count;\n\n                expect(result.getMedia).to.exist;\n                expect(result.getMedia).to.be.a('function');\n\n                name = utils.valid.getName();\n                rating = utils.valid.getRating();\n                duration = utils.valid.getDuration();\n                description = utils.valid.getDescription();\n                media = result.getMedia(name, rating, duration, description);\n                expect(media).to.be.a('object');\n                expect(media.name).to.be.a('string');\n                expect(media.name).to.equal(name);\n\n                expect(media.rating).to.be.a('number');\n                expect(media.rating).to.equal(rating);\n\n                expect(media.duration).to.be.a('number');\n                expect(media.duration).to.equal(duration);\n\n                expect(media.description).to.be.a('string');\n                expect(media.description).to.equal(description);\n                i = 0;\n                expect(media.id).to.be.a('number');\n                count = 10000;\n                ids = {};\n                while (i !== count) {\n                    media = result.getMedia(name, rating, duration, description);\n                    expect(ids[media.id]).to.be.undefined;\n                    ids[media.id] = 1;\n                    i += 1;\n                }\n            });\n        });\n        describe('Invalid tests', function () {\n            // test 7\n            it('Expect invalid name to throw', function () {\n\n                function testName_undefined() {\n                    /*jshint ignore: start */\n                    var name = undefined;\n                    /*jshint ignore: end */\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    result.getMedia(name, rating, duration, description);\n                }\n\n                function testNameSetter_undefined() {\n                    var name = utils.valid.getName();\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    var media = result.getMedia(name, rating, duration, description);\n                    media.name = undefined;\n                }\n\n                function testName_null() {\n                    var name = null;\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    result.getMedia(name, rating, duration, description);\n                }\n\n                function testNameSetter_null() {\n                    var name = utils.valid.getName();\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    var media = result.getMedia(name, rating, duration, description);\n                    media.name = null;\n                }\n\n\n                function testName_EmptyString() {\n                    var name = '';\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    result.getMedia(name, rating, duration, description);\n                }\n\n                function testNameSetter_EmptyString() {\n                    var name = utils.valid.getName();\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    var media = result.getMedia(name, rating, duration, description);\n                    media.name = '';\n                }\n\n                function testName_Short() {\n                    var name = utils.invalid.getShorterName();\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    result.getMedia(name, rating, duration, description);\n                }\n\n                function testNameSetter_Short() {\n                    var name = utils.valid.getName();\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    var media = result.getMedia(name, rating, duration, description);\n                    media.name = utils.invalid.getShorterName();\n                }\n\n                function testName_Long() {\n                    var name = utils.invalid.getLongerName();\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    result.getMedia(name, rating, duration, description);\n                }\n\n                function testNameSetter_Long() {\n                    var name = utils.valid.getName();\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    var media = result.getMedia(name, rating, duration, description);\n                    media.name = utils.invalid.getLongerName();\n                }\n\n                expect(result.getMedia).to.exist;\n                expect(testName_undefined).to.throw();\n                expect(testNameSetter_undefined).to.throw();\n                expect(testName_null).to.throw();\n                expect(testNameSetter_null).to.throw();\n                expect(testName_EmptyString).to.throw();\n                expect(testNameSetter_EmptyString).to.throw();\n                expect(testName_Short).to.throw();\n                expect(testNameSetter_Short).to.throw();\n                expect(testName_Long).to.throw();\n                expect(testNameSetter_Long).to.throw();\n            });\n            // test 8\n            it('Expect invalid description to throw', function () {\n\n                function testDescription_undefined() {\n                    var name = utils.valid.getName();\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description;\n                    result.getMedia(name, rating, duration, description);\n                }\n\n                function testDescriptionSetter_undefined() {\n                    var name = utils.valid.getName();\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    var media = result.getMedia(name, rating, duration, description);\n                    media.description = undefined;\n                }\n\n                function testDescription_null() {\n                    var name = utils.valid.getName();\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description = null;\n                    result.getMedia(name, rating, duration, description);\n                }\n\n                function testDescriptionSetter_null() {\n                    var name = utils.valid.getName();\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    var media = result.getMedia(name, rating, duration, description);\n                    media.description = null;\n                }\n\n                function testDescription_EmptyString() {\n                    var name = utils.valid.getName();\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description = '';\n                    result.getMedia(name, rating, duration, description);\n                }\n\n                function testDescriptionSetter_EmptyString() {\n                    var name = utils.valid.getName();\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    var media = result.getMedia(name, rating, duration, description);\n                    media.description = '';\n                }\n\n                expect(result.getMedia).to.exist;\n                expect(testDescription_undefined).to.throw();\n                expect(testDescriptionSetter_undefined).to.throw();\n                expect(testDescription_null).to.throw();\n                expect(testDescriptionSetter_null).to.throw();\n                expect(testDescription_EmptyString).to.throw();\n                expect(testDescriptionSetter_EmptyString).to.throw();\n            });\n            // test 9\n            it('Expect invalid rating to throw', function () {\n\n                function testRating_undefined() {\n                    var name = utils.valid.getName();\n                    var rating;\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    result.getMedia(name, rating, duration, description);\n                }\n\n                function testRatingSetter_undefined() {\n                    var name = utils.valid.getName();\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    var media = result.getMedia(name, rating, duration, description);\n                    media.rating = undefined;\n                }\n\n                function testRating_null() {\n                    var name = utils.valid.getName();\n                    var rating = null;\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    result.getMedia(name, rating, duration, description);\n                }\n\n                function testRatingSetter_null() {\n                    var name = utils.valid.getName();\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    var media = result.getMedia(name, rating, duration, description);\n                    media.rating = null;\n                }\n\n                function testRating_Small() {\n                    var name = utils.valid.getName();\n                    var rating = utils.invalid.getSmallRating();\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    result.getMedia(name, rating, duration, description);\n                }\n\n                function testRatingSetter_Small() {\n                    var name = utils.valid.getName();\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    var media = result.getMedia(name, rating, duration, description);\n                    media.rating = utils.invalid.getSmallRating();\n                }\n\n\n                function testRating_Large() {\n                    var name = utils.valid.getName();\n                    var rating = utils.invalid.getLargeRating();\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    result.getMedia(name, rating, duration, description);\n                }\n\n                function testRatingSetter_Large() {\n                    var name = utils.valid.getName();\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    var media = result.getMedia(name, rating, duration, description);\n                    media.rating = utils.invalid.getLargeRating();\n                }\n\n                expect(result.getMedia).to.exist;\n                expect(testRating_undefined).to.throw();\n                expect(testRatingSetter_undefined).to.throw();\n                expect(testRating_null).to.throw();\n                expect(testRatingSetter_null).to.throw();\n                expect(testRating_Small).to.throw();\n                expect(testRatingSetter_Small).to.throw();\n                expect(testRating_Large).to.throw();\n                expect(testRatingSetter_Large).to.throw();\n            });\n            // test 10\n            it('Expect invalid duration to throw', function () {\n\n                function testDuration_undefined() {\n                    var name = utils.valid.getName();\n                    var rating = utils.valid.getRating();\n                    var duration;\n                    var description = utils.valid.getDescription();\n                    result.getMedia(name, rating, duration, description);\n                }\n\n                function testDurationSetter_undefined() {\n                    var name = utils.valid.getName();\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    var media = result.getMedia(name, rating, duration, description);\n                    media.duration = undefined;\n                }\n\n                function testDuration_null() {\n                    var name = utils.valid.getName();\n                    var rating = utils.valid.getRating();\n                    var duration = null;\n                    var description = utils.valid.getDescription();\n                    result.getMedia(name, rating, duration, description);\n                }\n\n                function testDurationSetter_null() {\n                    var name = utils.valid.getName();\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    var media = result.getMedia(name, rating, duration, description);\n                    media.duration = null;\n                }\n\n                function testDuration_Zero() {\n                    var name = utils.valid.getName();\n                    var rating = utils.valid.getRating();\n                    var duration = 0;\n                    var description = utils.valid.getDescription();\n                    result.getMedia(name, rating, duration, description);\n                }\n\n                function testDurationSetter_Zero() {\n                    var name = utils.valid.getName();\n                    var rating = utils.valid.getRating();\n                    var duration = utils.valid.getDuration();\n                    var description = utils.valid.getDescription();\n                    var media = result.getMedia(name, rating, duration, description);\n                    media.duration = 0;\n                }\n\n                expect(result.getBook).to.exist;\n                expect(testDuration_undefined).to.throw();\n                expect(testDurationSetter_undefined).to.throw();\n                expect(testDuration_null).to.throw();\n                expect(testDurationSetter_null).to.throw();\n                expect(testDuration_Zero).to.throw();\n                expect(testDurationSetter_Zero).to.throw();\n            });\n        });\n    });\n\n    describe('BookCatalog tests', function () {\n        describe('Valid tests', function () {\n            // test 11\n            beforeEach(function(done) {\n                result = require('../tasks/solution')();\n                done();\n            });\n            it('expect getBookCatalog to exist, to be a function and to return object with properties name and unique id and methods: add(), find() with 1 param and search() with 1 param', function () {\n                var name = utils.valid.getName(),\n                    catalog = result.getBookCatalog(name);\n\n                expect(result.getBookCatalog).to.exist;\n                expect(result.getBookCatalog).to.be.a('function');\n                expect(catalog).to.be.a('object');\n                expect(catalog.name).to.be.a('string');\n                expect(catalog.name).to.equal(name);\n\n                expect(catalog.items).to.exist;\n                expect(Array.isArray(catalog.items)).to.be.true;\n\n                expect(catalog.add).to.exist;\n                expect(catalog.add).to.be.a('function');\n\n                expect(catalog.find).to.exist;\n                expect(catalog.find).to.be.a('function');\n                expect(catalog.find.length).to.equal(1);\n\n                expect(catalog.search).to.exist;\n                expect(catalog.search).to.be.a('function');\n                expect(catalog.search.length).to.equal(1);\n\n                expect(catalog.getGenres).to.exist;\n                expect(catalog.getGenres).to.be.a('function');\n                expect(catalog.getGenres.length).to.equal(0);\n            });\n            // test 12\n            it('expect bookCatalog.add() to add books only and to work with array or books separated with comma', function () {\n                var catalog,\n                    name,\n                    description,\n                    isbn,\n                    genre,\n                    books,\n                    resultOfAdd,\n                    i;\n\n                catalog = result.getBookCatalog(utils.valid.getName());\n                books = [];\n                for (i = 0; i < 3; i += 1) {\n                    name = utils.valid.getName();\n                    isbn = utils.valid.getISBN13();\n                    genre = utils.valid.getGenre();\n                    description = utils.valid.getDescription();\n                    books.push(result.getBook(name, isbn, genre, description));\n                }\n\n                // test single item add\n                resultOfAdd = catalog.add(books[0]);\n                expect(catalog.items[0]).to.equal(books[0]);\n                expect(resultOfAdd).to.equal(catalog);\n\n                //test multiple items add\n                catalog.add(books[1], books[2]);\n                expect(catalog.items[1]).to.equal(books[1]);\n                expect(catalog.items[2]).to.equal(books[2]);\n\n                // test array add\n                catalog.add(books);\n                expect(catalog.items[3]).to.equal(books[0]);\n                expect(catalog.items[4]).to.equal(books[1]);\n                expect(catalog.items[5]).to.equal(books[2]);\n            });\n            // test 13\n            it('expect bookCatalog.getGenres() to get unique genres', function () {\n                var catalog,\n                    genre,\n                    book,\n                    findResult,\n                    i,\n                    id = 100,\n                    len = 10,\n                    books = [];\n\n                catalog = result.getBookCatalog(utils.valid.getName());\n\n                // test with one book\n                genre = 'generic';\n                book = {\n                    id: id,\n                    name: utils.valid.getName(),\n                    isbn: utils.valid.getISBN13(),\n                    genre: genre,\n                    description: utils.valid.getDescription()\n                };\n                catalog.items.push(book);\n                findResult = catalog.getGenres();\n                expect(findResult).to.exits;\n                expect(findResult.length).to.equal(1);\n                expect(findResult[0]).to.equal(genre);\n\n                // test with multiple books\n                for (i = 0; i < len; i += 1) {\n                    book = {\n                        id: (i + len),\n                        name: utils.valid.getName(),\n                        isbn: utils.valid.getISBN13(),\n                        genre: ('generic ' + i),\n                        description: utils.valid.getDescription()\n                    };\n\n                    books.push(book);\n                    catalog.items.push(book);\n                }\n\n                findResult = catalog.getGenres();\n                expect(findResult).to.exits;\n                expect(findResult.length).to.equal(len + 1);\n\n                // test with no genre\n                catalog = result.getBookCatalog(utils.valid.getName());\n                findResult = catalog.getGenres();\n                expect(findResult).to.exits;\n                expect(findResult.length).to.equal(0);//*/\n            });\n            // test 14\n            it('expect bookCatalog.find() by id to find the leftmost book in the items array or return null', function () {\n                var catalog,\n                    book,\n                    i,\n                    id = 100,\n                    len = 10,\n                    books = [];\n\n                catalog = result.getBookCatalog(utils.valid.getName());\n\n                function testFindById_Undefined() {\n                    catalog.find();\n                }\n\n                expect(testFindById_Undefined).to.throw();\n                expect(catalog.find(id * id)).to.be.null;\n\n                book = {\n                    id: id,\n                    name: utils.valid.getName(),\n                    isbn: utils.valid.getISBN13(),\n                    genre: utils.valid.getGenre(),\n                    description: utils.valid.getDescription()\n                };\n                catalog.items.push(book);\n                expect(catalog.find(id)).to.equal(book);\n\n                // test with multiple books\n                for (i = 0; i < len; i += 1) {\n                    /*name = utils.valid.getName();\n                     isbn = utils.valid.getISBN13();\n                     genre = utils.valid.getGenre();\n                     description = utils.valid.getDescription();\n                     //book = result.getBook(name, isbn, genre, description); // dependant on getBook method //*/\n                    book = {\n                        id: (i + len),\n                        name: utils.valid.getName(),\n                        isbn: utils.valid.getISBN13(),\n                        genre: utils.valid.getGenre(),\n                        description: utils.valid.getDescription()\n                    };\n\n                    books.push(book);\n                    catalog.items.push(book);\n                }\n\n                for (i = 0; i < len; i += 1) {\n                    expect(catalog.find(i + len)).to.equal(books[i]);\n                }\n\n                function testFindID_undefined() {\n                    catalog.find();\n                }\n\n                function testFindID_null() {\n                    catalog.find(null);\n                }\n\n                function testFindID_string() {\n                    catalog.find('text');\n                }\n\n                expect(testFindID_undefined).to.throw();\n                expect(testFindID_null).to.throw();\n                expect(testFindID_string).to.throw();\n            });\n            // test 15\n            it('expect bookCatalog.find() by options to find an array of book in the items array or return null', function () {\n                var catalog,\n                    book,\n                    findResult,\n                    i,\n                    id = 100,\n                    len = 10,\n                    books = [];\n\n                catalog = result.getBookCatalog(utils.valid.getName());\n\n                function testFindById_Undefined() {\n                    catalog.find();\n                }\n\n                expect(testFindById_Undefined).to.throw();\n                expect(catalog.find({name: 'nonexistent'})).to.exits;\n                expect(Array.isArray(catalog.find({name: 'nonexistent'}))).to.be.true;\n                expect(catalog.find({name: 'nonexistent'}).length).to.exits; // it is an array-like object\n                expect(catalog.find({name: 'nonexistent'}).length).to.equal(0);\n\n                // test with one book\n                book = {\n                    id: id,\n                    name: utils.valid.getName(),\n                    isbn: utils.valid.getISBN13(),\n                    genre: utils.valid.getGenre(),\n                    description: utils.valid.getDescription()\n                };\n                catalog.items.push(book);\n                findResult = catalog.find({id: id});\n                expect(findResult).to.exits;\n                expect(findResult.length).to.equal(1);\n                expect(findResult[0]).to.equal(book);\n\n                // test with multiple books\n                for (i = 0; i < len; i += 1) {\n                    book = {\n                        id: (i + len),\n                        name: 'myName',\n                        isbn: utils.valid.getISBN13(),\n                        genre: ('generic' + i),\n                        description: utils.valid.getDescription()\n                    };\n\n                    books.push(book);\n                    catalog.items.push(book);\n                }\n\n                findResult = catalog.find({name: 'myName'});\n                expect(findResult).to.exits;\n                expect(findResult.length).to.equal(len);\n\n                findResult = catalog.find({id: 2 + len, name: 'myName'});\n                expect(findResult).to.exits;\n                expect(findResult.length).to.equal(1);\n                expect(findResult[0]).to.equal(books[2]);\n\n                // test search by genre\n                findResult = catalog.find({genre: 'generic1'});\n                expect(findResult).to.exits;\n                expect(findResult.length).to.equal(1);\n            });\n            // test 16\n            it('expect bookCatalog.search() to return an array of found items or empty array', function () {\n                var i,\n                    catalog,\n                    book,\n                    pattern,\n                    len = 100;\n                catalog = result.getBookCatalog(utils.valid.getName());\n\n                book = {\n                    id: 123456,\n                    name: utils.valid.getName(),\n                    isbn: utils.valid.getISBN13(),\n                    genre: utils.valid.getGenre(),\n                    description: utils.valid.getDescription()\n                };\n                catalog.items.push(book);\n\n                pattern = book.name.substr(1, book.name.length / 2);\n                expect(catalog.search(pattern)).to.eql([book]);\n\n                pattern = book.description.substr(3, 6);\n                expect(catalog.search(pattern)).to.eql([book]);\n                // test with multiple books\n                catalog.items = [];\n                for (i = 0; i < len; i += 1) {\n                    book = {\n                        id: (i + len),\n                        name: utils.valid.getName(),\n                        isbn: utils.valid.getISBN13(),\n                        genre: utils.valid.getGenre(),\n                        description: utils.valid.getDescription()\n                    };\n                    catalog.items.push(book);\n                }\n                pattern = catalog.items[0].name.substr(1, 3);\n                var matchingBooks = catalog.items.filter(function (book) {\n                    return book.name.indexOf(pattern) >= 0 ||\n                        book.description.indexOf(pattern) >= 0;\n                });\n                expect(catalog.search(pattern)).to.eql(matchingBooks);\n            });\n            // test 17\n            it('Expect bookCatalog.search() to return empty array, when no books in catalog and when no books that contain the pattern ', function () {\n                var catalog,\n                    i,\n                    pattern,\n                    len = 100,\n                    namePrefix = utils.valid.getGenre(),\n                    isbn = utils.valid.getISBN10(),\n                    genre = utils.valid.getGenre(),\n                    description = utils.valid.getDescription();\n                catalog = result.getBookCatalog(utils.valid.getName());\n\n                expect(catalog.search('asdsad')).to.eql([]);\n                catalog.items = [];\n                for (i = 0; i < len; i += 1) {\n                    catalog.items.push(result.getBook(namePrefix + i, isbn, genre, description));\n                }\n                pattern = namePrefix.substr(0, namePrefix.length - 1);\n                pattern += 'Something that surely cannot be found in the valid genre';\n                expect(catalog.search(pattern)).to.eql([]);\n            });\n        });\n        describe('Invalid tests', function () {\n            // test 18\n            beforeEach(function(done) {\n                result = require('../tasks/solution')();\n                done();\n            });\n            it('Expect bookCatalog.search() to throw if pattern is undefined, null or empty string ', function () {\n                var catalog = result.getBookCatalog(utils.valid.getName());\n\n                function testSearch_Undefined() {\n                    catalog.search();\n                }\n\n                function testSearch_null() {\n                    catalog.search(null);\n                }\n\n                function testSearch_EmptyString() {\n                    catalog.search('');\n                }\n\n                expect(testSearch_Undefined).to.throw();\n                expect(testSearch_null).to.throw();\n                expect(testSearch_EmptyString).to.throw();\n            });\n            // test 19\n            it('expect invalid name to throw', function () {\n                var catalog,\n                    name,\n                    count,\n                    i,\n                    ids;\n\n                name = utils.valid.getName();\n                catalog = result.getBookCatalog(name);\n\n                // test if id is unique\n                expect(catalog.id).to.be.a('number');\n                count = 10000;\n                ids = {};\n                for (i = 0; i < count; i += 1) {\n                    catalog = result.getBookCatalog(utils.valid.getName());\n                    expect(ids[catalog.id]).to.be.undefined;\n                    ids[catalog.id] = 1;\n                }\n\n                // test name exceptions\n                function testName_undefined() {\n                    result.getBookCatalog();\n                }\n\n                function testNameSetter_undefined() {\n                    catalog = result.getBookCatalog(utils.getName());\n                    catalog.name = undefined;\n                }\n\n                function testName_null() {\n                    result.getBookCatalog(null);\n                }\n\n                function testNameSetter_null() {\n                    catalog = result.getBookCatalog(utils.getName());\n                    catalog.name = null;\n                }\n\n                function testName_Empty() {\n                    result.getBookCatalog('');\n                }\n\n                function testNameSetter_Empty() {\n                    catalog = result.getBookCatalog(utils.getName());\n                    catalog.name = '';\n                }\n\n                function testName_Short() {\n                    result.getBookCatalog(utils.invalid.getShorterName());\n                }\n\n                function testNameSetter_Short() {\n                    catalog = result.getBookCatalog(utils.getName());\n                    catalog.name = utils.invalid.getShorterName();\n                }\n\n                function testName_Long() {\n                    result.getBookCatalog(utils.invalid.getLongerName());\n                }\n\n                function testNameSetter_Long() {\n                    catalog = result.getBookCatalog(utils.getName());\n                    catalog.name = utils.invalid.getLongerName();\n                }\n\n                expect(testName_undefined).to.throw();\n                expect(testNameSetter_undefined).to.throw();\n                expect(testName_null).to.throw();\n                expect(testNameSetter_null).to.throw();\n                expect(testName_Empty).to.throw();\n                expect(testNameSetter_Empty).to.throw();\n                expect(testName_Short).to.throw();\n                expect(testNameSetter_Short).to.throw();\n                expect(testName_Long).to.throw();\n                expect(testNameSetter_Long).to.throw();\n            });\n            // test 20\n            it('expect bookCatalog.add() to throw', function () {\n                var duration,\n                    rating,\n                    description,\n                    name = utils.valid.getName(),\n                    catalog = result.getBookCatalog(name);\n\n                // add invalid book\n                function testAdd_undefined() {\n                    catalog.add();\n                }\n\n                function testAdd_null() {\n                    catalog.add(null);\n                }\n\n                function testAdd_Empty() {\n                    catalog.add({});\n                }\n\n                function testAdd_Media() {\n                    var media;\n                    name = utils.getName();\n                    duration = utils.valid.getDuration();\n                    rating = utils.valid.getRating();\n                    description = utils.getDescription();\n\n                    media = result.getMedia(name, duration, rating, description);\n                    catalog.add(media);\n                }\n\n                function testAdd_InvalidBook() {\n                    var book = {\n                        isbn: utils.valid.getISBN10(),\n                        genre: utils.valid.getGenre()\n                    };\n                    catalog.add(book);\n                }\n\n                expect(testAdd_undefined).to.throw();\n                expect(testAdd_null).to.throw();\n                expect(testAdd_Empty).to.throw();\n                expect(testAdd_Media).to.throw();\n                expect(testAdd_InvalidBook).to.throw();\n            });\n        });\n    });\n    describe('MediaCatalog tests', function () {\n        describe('Valid tests', function () {\n            // test 21\n            beforeEach(function(done) {\n                result = require('../tasks/solution')();\n                done();\n            });\n            it('expect getMediaCatalog to exist, to be a function and to return object with properties name and unique id and methods: add(), find() with 1 param and search() with 1 param', function () {\n                var name = utils.valid.getName(),\n                    catalog = result.getMediaCatalog(name);\n\n                expect(result.getMediaCatalog).to.exist;\n                expect(result.getMediaCatalog).to.be.a('function');\n                expect(catalog).to.be.a('object');\n                expect(catalog.name).to.be.a('string');\n                expect(catalog.name).to.equal(name);\n\n                expect(catalog.items).to.exist;\n                expect(Array.isArray(catalog.items)).to.be.true;\n\n                expect(catalog.add).to.exist;\n                expect(catalog.add).to.be.a('function');\n\n                expect(catalog.find).to.exist;\n                expect(catalog.find).to.be.a('function');\n                expect(catalog.find.length).to.equal(1);\n\n                expect(catalog.search).to.exist;\n                expect(catalog.search).to.be.a('function');\n                expect(catalog.search.length).to.equal(1);\n\n                expect(catalog.getTop).to.exist;\n                expect(catalog.getTop).to.be.a('function');\n                expect(catalog.getTop.length).to.equal(1);\n\n                expect(catalog.getSortedByDuration).to.exist;\n                expect(catalog.getSortedByDuration).to.be.a('function');\n                expect(catalog.getSortedByDuration.length).to.equal(0);\n            });\n            // test 22\n            it('expect mediaCatalog.add() to add media only and to work with array or media separated with comma', function () {\n                var catalog,\n                    name,\n                    description,\n                    rating,\n                    duration,\n                    medias,\n                    resultOfAdd,\n                    i;\n\n                catalog = result.getMediaCatalog(utils.valid.getName());\n                medias = [];\n                for (i = 0; i < 3; i += 1) {\n                    name = utils.valid.getName();\n                    rating = utils.valid.getRating();\n                    duration = utils.valid.getDuration();\n                    description = utils.valid.getDescription();\n                    medias.push(result.getMedia(name, rating, duration, description));\n                }\n\n                // test single item add\n                resultOfAdd = catalog.add(medias[0]);\n                expect(catalog.items[0]).to.equal(medias[0]);\n                expect(resultOfAdd).to.equal(catalog);\n\n                //test multiple items add\n                catalog.add(medias[1], medias[2]);\n                expect(catalog.items[1]).to.equal(medias[1]);\n                expect(catalog.items[2]).to.equal(medias[2]);\n\n                // test array addmedias\n                catalog.add(medias);\n                expect(catalog.items[3]).to.equal(medias[0]);\n                expect(catalog.items[4]).to.equal(medias[1]);\n                expect(catalog.items[5]).to.equal(medias[2]);\n            });\n            // test 23\n            it('expect mediaCatalog.getTop() to get unique genres', function () {\n                var catalog,\n                    name,\n                    rating,\n                    media,\n                    findResult,\n                    top,\n                    i,\n                    id = 100,\n                    len = 20,\n                    medias = [];\n\n                catalog = result.getMediaCatalog(utils.valid.getName());\n\n                // test with one medias\n                rating = 1;\n                name = 'generic';\n                media = {\n                    id: id,\n                    name: name,\n                    rating: rating,\n                    duration: utils.valid.getDuration(),\n                    description: utils.valid.getDescription()\n                };\n                catalog.items.push(media);\n                findResult = catalog.getTop(len);\n                expect(findResult).to.exits;\n                expect(findResult.length).to.equal(1);\n                expect(findResult[0].name).to.equal(name);\n                expect(findResult[0].rating).to.not.exist;\n                expect(findResult[0].duration).to.not.exist;\n                expect(findResult[0].description).to.not.exist;\n\n                // test with multiple books\n                for (i = 0; i < len; i += 1) {\n                    media = {\n                        id: (i + len),\n                        name: utils.valid.getName(),\n                        rating: rating,\n                        duration: utils.valid.getDuration(),\n                        description: utils.valid.getDescription()\n                    };\n\n                    medias.push(media);\n                    catalog.items.push(media);\n                }\n\n                top = 5;\n                findResult = catalog.getTop(top);\n                expect(findResult).to.exits;\n                expect(findResult.length).to.equal(top);\n\n                top = 30;\n                findResult = catalog.getTop(top);\n                expect(findResult).to.exits;\n                expect(findResult.length).to.equal(len + 1);\n\n                function testGetTop_NaN() {\n                    catalog.getTop('text');\n                }\n\n                function testGetTop_ltOne() {\n                    catalog.getTop(0);\n                }\n\n                expect(testGetTop_NaN).to.throw();\n                expect(testGetTop_ltOne).to.throw();\n            });\n            // test 24\n            it('expect mediaCatalog.find() by id to find the leftmost media in the items array or return null', function () {\n                var catalog,\n                    media,\n                    book,\n                    i,\n                    id = 100,\n                    len = 10,\n                    books = [];\n\n                catalog = result.getMediaCatalog(utils.valid.getName());\n\n                function testFindById_Undefined() {\n                    catalog.find();\n                }\n\n                expect(testFindById_Undefined).to.throw();\n                expect(catalog.find(id * id)).to.be.null;\n\n                media = {\n                    id: id,\n                    name: utils.valid.getName(),\n                    rating: utils.valid.getRating(),\n                    duration: utils.valid.getDuration(),\n                    description: utils.valid.getDescription()\n                };\n                catalog.items.push(media);\n                expect(catalog.find(id)).to.equal(media);\n\n                // test with multiple books\n                for (i = 0; i < len; i += 1) {\n                    book = {\n                        id: (i + len),\n                        name: utils.valid.getName(),\n                        isbn: utils.valid.getISBN13(),\n                        genre: utils.valid.getGenre(),\n                        description: utils.valid.getDescription()\n                    };\n\n                    books.push(book);\n                    catalog.items.push(book);\n                }\n\n                for (i = 0; i < len; i += 1) {\n                    expect(catalog.find(i + len)).to.equal(books[i]);\n                }\n\n                function testFindID_undefined() {\n                    catalog.find();\n                }\n\n                function testFindID_null() {\n                    catalog.find(null);\n                }\n\n                function testFindID_string() {\n                    catalog.find('text');\n                }\n\n                expect(testFindID_undefined).to.throw();\n                expect(testFindID_null).to.throw();\n                expect(testFindID_string).to.throw();//*/\n            });\n            // test 25\n            it('expect mediaCatalog.find() by options to find an array of media in the items array or return null', function () {\n                var catalog,\n                    media,\n                    findResult,\n                    i,\n                    id = 100,\n                    len = 10,\n                    medias = [];\n\n                catalog = result.getMediaCatalog(utils.valid.getName());\n\n                function testFindById_Undefined() {\n                    catalog.find();\n                }\n\n                expect(testFindById_Undefined).to.throw();\n                expect(catalog.find({name: 'nonexistent'})).to.exits;\n                expect(Array.isArray(catalog.find({name: 'nonexistent'}))).to.be.true;\n                expect(catalog.find({name: 'nonexistent'}).length).to.exits; // it is an array-like object\n                expect(catalog.find({name: 'nonexistent'}).length).to.equal(0);\n\n                // test with one book\n                media = {\n                    id: id,\n                    name: utils.valid.getName(),\n                    rating: 4,\n                    duration: utils.valid.getDuration(),\n                    description: utils.valid.getDescription()\n                };\n                catalog.items.push(media);\n                findResult = catalog.find({id: id});\n                expect(findResult).to.exits;\n                expect(findResult.length).to.equal(1);\n                expect(findResult[0]).to.equal(media);\n\n                // test with multiple books\n                for (i = 0; i < len; i += 1) {\n                    media = {\n                        id: (i + len),\n                        name: 'myName',\n                        rating: 3,\n                        duration: utils.valid.getDuration(),\n                        description: utils.valid.getDescription()\n                    };\n\n                    medias.push(media);\n                    catalog.items.push(media);\n                }\n\n                findResult = catalog.find({name: 'myName'});\n                expect(findResult).to.exits;\n                expect(findResult.length).to.equal(len);\n\n                findResult = catalog.find({id: 2 + len, name: 'myName'});\n                expect(findResult).to.exits;\n                expect(findResult.length).to.equal(1);\n                expect(findResult[0]).to.equal(medias[2]);\n\n                // test search by genre\n                findResult = catalog.find({rating: 4});\n                expect(findResult).to.exits;\n                expect(findResult.length).to.equal(1);\n            });\n            // test 26\n            it('expect mediaCatalog.search() to return an array of found items or empty array', function () {\n                var i,\n                    catalog,\n                    media,\n                    pattern,\n                    len = 100;\n                catalog = result.getMediaCatalog(utils.valid.getName());\n\n                media = {\n                    id: 123456,\n                    name: utils.valid.getName(),\n                    rating: utils.valid.getRating(),\n                    duration: utils.valid.getDuration(),\n                    description: utils.valid.getDescription()\n                };\n                catalog.items.push(media);\n\n                pattern = media.name.substr(1, media.name.length / 2);\n                expect(catalog.search(pattern)).to.eql([media]);\n\n                pattern = media.description.substr(3, 6);\n                expect(catalog.search(pattern)).to.eql([media]);\n                // test with multiple books\n                catalog.items = [];\n                for (i = 0; i < len; i += 1) {\n                    media = {\n                        id: (i + len),\n                        name: utils.valid.getName(),\n                        rating: utils.valid.getRating(),\n                        duration: utils.valid.getDuration(),\n                        description: utils.valid.getDescription()\n                    };\n                    catalog.items.push(media);\n                }\n                pattern = catalog.items[0].name.substr(1, 3);\n                var matchingMedia = catalog.items.filter(function (media) {\n                    return media.name.indexOf(pattern) >= 0 ||\n                        media.description.indexOf(pattern) >= 0;\n                });\n                expect(catalog.search(pattern)).to.eql(matchingMedia);\n            });\n            // test 27\n            it('Expect mediaCatalog.search() to return empty array, when no media in catalog and when no media that contain the pattern ', function () {\n                var catalog,\n                    i,\n                    pattern,\n                    len = 100,\n                    namePrefix = utils.valid.getGenre(),\n                    duration = utils.valid.getDuration(),\n                    rating = utils.valid.getRating(),\n                    description = utils.valid.getDescription();\n                catalog = result.getMediaCatalog(utils.valid.getName());\n\n                expect(catalog.search('asdsad')).to.eql([]);\n\n                catalog.items = [];\n                for (i = 0; i < len; i += 1) {\n                    catalog.items.push(result.getMedia(namePrefix + i, rating, duration, description));\n                }\n                pattern = namePrefix.substr(0, namePrefix.length - 1);\n                pattern += 'Something that surely cannot be found in the valid genre';\n                expect(catalog.search(pattern)).to.eql([]);\n            });\n        });\n        describe('Invalid tests', function () {\n            // test 28\n            beforeEach(function(done) {\n                result = require('../tasks/solution')();\n                done();\n            });\n            it('Expect mediaCatalog.search() to throw if pattern is undefined, null or empty string ', function () {\n                var catalog = result.getMediaCatalog(utils.valid.getName());\n\n                function testSearch_Undefined() {\n                    catalog.search();\n                }\n\n                function testSearch_null() {\n                    catalog.search(null);\n                }\n\n                function testSearch_EmptyString() {\n                    catalog.search('');\n                }\n\n                expect(testSearch_Undefined).to.throw();\n                expect(testSearch_null).to.throw();\n                expect(testSearch_EmptyString).to.throw();\n            });\n            // test 29\n            it('expect invalid name to throw', function () {\n                var catalog,\n                    name,\n                    count,\n                    i,\n                    ids;\n\n                name = utils.valid.getName();\n                catalog = result.getMediaCatalog(name);\n\n                // test if id is unique\n                expect(catalog.id).to.be.a('number');\n                count = 10000;\n                ids = {};\n                for (i = 0; i < count; i += 1) {\n                    catalog = result.getMediaCatalog(utils.valid.getName());\n                    expect(ids[catalog.id]).to.be.undefined;\n                    ids[catalog.id] = 1;\n                }\n\n                // test name exceptions\n                function testName_undefined() {\n                    result.getMediaCatalog();\n                }\n\n                function testNameSetter_undefined() {\n                    catalog = result.getMediaCatalog(utils.getName());\n                    catalog.name = undefined;\n                }\n\n                function testName_null() {\n                    result.getMediaCatalog(null);\n                }\n\n                function testNameSetter_null() {\n                    catalog = result.getMediaCatalog(utils.getName());\n                    catalog.name = null;\n                }\n\n                function testName_Empty() {\n                    result.getMediaCatalog('');\n                }\n\n                function testNameSetter_Empty() {\n                    catalog = result.getMediaCatalog(utils.getName());\n                    catalog.name = '';\n                }\n\n                function testName_Short() {\n                    result.getMediaCatalog(utils.invalid.getShorterName());\n                }\n\n                function testNameSetter_Short() {\n                    catalog = result.getMediaCatalog(utils.getName());\n                    catalog.name = utils.invalid.getShorterName();\n                }\n\n                function testName_Long() {\n                    result.getMediaCatalog(utils.invalid.getLongerName());\n                }\n\n                function testNameSetter_Long() {\n                    catalog = result.getBookCatalog(utils.getName());\n                    catalog.name = utils.invalid.getLongerName();\n                }\n\n                expect(testName_undefined).to.throw();\n                expect(testNameSetter_undefined).to.throw();\n                expect(testName_null).to.throw();\n                expect(testNameSetter_null).to.throw();\n                expect(testName_Empty).to.throw();\n                expect(testNameSetter_Empty).to.throw();\n                expect(testName_Short).to.throw();\n                expect(testNameSetter_Short).to.throw();\n                expect(testName_Long).to.throw();\n                expect(testNameSetter_Long).to.throw();\n            });\n            // test 30\n            it('expect mediaCatalog.add() to throw', function () {\n                var duration,\n                    rating,\n                    description,\n                    media,\n                    name = utils.valid.getName(),\n                    catalog = result.getMediaCatalog(name);\n\n                // add invalid book\n                function testAdd_undefined() {\n                    catalog.add();\n                }\n\n                function testAdd_null() {\n                    catalog.add(null);\n                }\n\n                function testAdd_Empty() {\n                    catalog.add({});\n                }\n\n                function testAdd_Media() {\n                    name = utils.getName();\n                    duration = utils.valid.getDuration();\n                    rating = utils.valid.getRating();\n                    description = utils.getDescription();\n\n                    media = result.getMedia(name, duration, rating, description);\n                    catalog.add(media);\n                }\n\n                function testAdd_InvalidMedia() {\n                    media = {\n                        rating: utils.valid.Rating(),\n                        duration: utils.valid.getDuration()\n                    };\n                    catalog.add(media);\n                }\n\n                expect(testAdd_undefined).to.throw();\n                expect(testAdd_null).to.throw();\n                expect(testAdd_Empty).to.throw();\n                expect(testAdd_Media).to.throw();\n                expect(testAdd_InvalidMedia).to.throw();\n            });\n        });\n    });\n});"]}