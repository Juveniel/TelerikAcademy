{"version":3,"sources":["location.js"],"names":[],"mappings":"AAAA,CAAC,YAAW;AACR,WAAO,EAAP,GAAY,OAAO,EAAP,IAAa,EAAzB;AACH,CAFD;;AAIA;;;;AAIA,GAAG,eAAH,GAAsB,YAAW;AAC7B;;AAEA;;AACA,QAAI,mBAAmB,CACnB,eADmB,EAEnB,2BAFmB,EAGnB,2BAHmB,EAInB,mBAJmB,CAAvB;;AAOA;;;;AAIA,QAAI,cAAc,SAAS,WAAT,GAAuB;;AAErC,eAAO,IAAI,OAAJ,CAAY,UAAS,OAAT,EAAkB,MAAlB,EAA0B;;AAEzC;AACA,sBAAU,WAAV,CAAsB,kBAAtB,CACI,SAAS,eAAT,CAAyB,QAAzB,EAAmC;;AAE/B,oBAAI,cAAc;AACd,8BAAU,SAAS,MAAT,CAAgB,QADZ;AAEd,+BAAW,SAAS,MAAT,CAAgB;AAFb,iBAAlB;;AAKA,wBAAQ,WAAR;AAEH,aAVL,EAWI,SAAS,YAAT,CAAsB,KAAtB,EAA6B;;AAEzB,oBAAI,eAAe,iBAAiB,MAAM,IAAvB,CAAnB;;AAEA,oBAAI,MAAM,IAAN,KAAe,CAAf,IAAoB,MAAM,IAAN,KAAe,CAAvC,EAA0C;AACtC,oCAAgB,MAAM,MAAM,OAA5B;AACH;;AAED,uBAAO,wBAAwB,YAA/B;AAEH,aArBL;AAuBH,SA1BM,CAAP;AA4BH,KA9BD;;AAgCA;AACA,WAAO;AACH,qBAAa;AADV,KAAP;AAIH,CApDoB,EAArB","file":"location-compiled.js","sourcesContent":["(function() {\r\n    window.LC = window.LC || {};\r\n})();\r\n\r\n/**\r\n * Gets the location from browser and resolve promise with data\r\n **/\r\n\r\nLC.currentLocation = (function() {\r\n    'use strict';\r\n\r\n    //Possible error codes thrown via the Geolocation API\r\n    var ERROR_TYPE_CODES = [\r\n        'Unknown error',\r\n        'Permission denied by user',\r\n        'Position is not available',\r\n        'Request timed out'\r\n    ];\r\n\r\n    /**\r\n     * Gets the location from the browser.\r\n     * @return Promise promise that is fulfilled when the Geolocation has been found\r\n     **/\r\n    var getLocation = function getLocation() {\r\n\r\n        return new Promise(function(resolve, reject) {\r\n\r\n            // Geolocation API\r\n            navigator.geolocation.getCurrentPosition(\r\n                function resolveLocation(position) {\r\n\r\n                    var coordinates = {\r\n                        latitude: position.coords.latitude,\r\n                        longitude: position.coords.longitude\r\n                    };\r\n                    \r\n                    resolve(coordinates);\r\n\r\n                },\r\n                function resolveError(error) {\r\n\r\n                    var errorMessage = ERROR_TYPE_CODES[error.code];\r\n\r\n                    if (error.code === 0 || error.code === 2) {\r\n                        errorMessage += ' ' + error.message;\r\n                    }\r\n\r\n                    reject('Geolocation error: ' + errorMessage);\r\n\r\n                }\r\n            );\r\n        });\r\n\r\n    };\r\n\r\n    //Location module API\r\n    return {\r\n        getLocation: getLocation\r\n    };\r\n\r\n})();"]}