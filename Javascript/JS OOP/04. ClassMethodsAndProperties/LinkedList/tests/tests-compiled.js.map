{"version":3,"sources":["tests.js"],"names":[],"mappings":"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","file":"tests-compiled.js","sourcesContent":["'use strict';\n\nconst chai = require('chai'),\n    expect = chai.expect,\n    LinkedList = require('../task/task-1');\n\ndescribe('Linked list: ', () => {\n    it('should have append and toString correctly', () => {\n\n        const list = new LinkedList(),\n            values = [1, 2, false, 3, 4];\n\n        list.append(...values);\n\n        expect(list.first).to.equal(values[0]);\n        expect(list.last).to.equal(values[values.length - 1]);\n        expect(list.length).to.equal(values.length);\n        expect(list.toString()).to.equal(values.join(' -> '));\n    });\n\n    it('append should implement chaining and toString should work correctly', () => {\n        const values = [1, 2, 3, 4, 5, 6],\n            list = new LinkedList()\n                .append(1, 2)\n                .append(3, 4)\n                .append(5)\n                .append(6);\n\n\n        expect(list.first).to.equal(values[0]);\n        expect(list.last).to.equal(values[values.length - 1]);\n        expect(list.length).to.equal(values.length);\n        expect(list.toString()).to.equal(values.join(' -> '));\n    });\n\n    it('should implement prepend correctly, enable chaining and toString should work correctly', () => {\n\n        const values = [0, 1, 2, 3, 4, 5],\n            list = new LinkedList()\n                            .append(3, 4)\n                            .prepend(1, 2)\n                            .prepend(0)\n                            .append(5);\n\n\n        expect(list.first).to.equal(values[0]);\n        expect(list.last).to.equal(values[values.length - 1]);\n        expect(list.length).to.equal(values.length);\n        expect(list.toString()).to.equal(values.join(' -> '));\n    });\n\n    it('should insert correctly', () => {\n        const values = [1, 2, 6, 7, 8],\n            list = new LinkedList().append(...values).insert(2, 3, 4).insert(4, 5);\n\n        expect(list.first).to.equal(1);\n        expect(list.length).to.equal(8);\n        expect(list.toString()).to.equal([1, 2, 3, 4, 5, 6, 7, 8].join(' -> '));\n    });\n\n    it('should insert correctly', () => {\n        const list = new LinkedList().append(1, 2).insert(0, 3, 4);\n\n        list.insert(list.length - 1, 'kremikovci');\n\n        expect(list.first).to.equal(3);\n        expect(list.last).to.equal(2);\n        expect(list.length).to.equal(5);\n        expect(list.toString()).to.equal([3, 4, 1, 'kremikovci', 2].join(' -> '));\n\n    });\n\n    it('should have correct for-of', () => {\n\n        const values = [5, 6, 38],\n            list = new LinkedList().append(...values);\n\n        for (const val of list) {\n            expect(values.indexOf(val)).to.not.equal(-1);\n        }\n    });\n\n    it('should have correct for-of', () => {\n\n        const values = [5, 6, 3, 'gosho', true, null, 'ivan', { message: 'Hello' }],\n            list = new LinkedList()\n                .append(...values.slice(4))\n                .prepend(...values.slice(0, 4));\n\n        for (const val of list) {\n            expect(val).to.equal(values.shift());\n        }\n    });\n\n    it('should have correct removeAt', () => {\n        const theObj = { value: 'val', message: 'hello' }; \n        const values = ['test', true, null, 1, 2, 'testtest', theObj, 'gg'],\n            list = new LinkedList().append(...values),\n            removed1 = list.removeAt(1),\n            removed2 = list.removeAt(1),\n            removed3 = list.removeAt(0),\n            removed4 = list.removeAt(list.length - 1);\n\n        expect(list.first).to.equal(1);\n        expect(list.last).to.equal(theObj);\n        //expect(list.length).to.equal(values.length - 4);\n        expect([removed1, removed2, removed3, removed4].join()).to.equal([true, null, 'test', 'gg'].join());\n    });\n\n    it('should have correct indexing with at(index)', () => {\n        const values = 'babel src --presets es2015 --out-dir ./build -s -w'.split(' '),\n            list = new LinkedList().append(...values),\n            listLength = list.length;\n\n        for (let i = 0, length = values.length; i < length; i += 1) {\n            expect(list.at(i)).to.equal(values[i]);\n        }\n\n        expect(list.first).to.equal(values[0]);\n        expect(list.last).to.equal(values[values.length - 1]);\n        expect(list.length).to.equal(listLength);\n    });\n\n    it('at(0) should return the same as .first', () => {\n        const list = new LinkedList().append(1, 2, 3, 5);\n\n        expect(list.at(0)).to.equal(list.first);\n    });\n\n    it('at(list.length - 1) should return the same as .last', () => {\n        const list = new LinkedList().append(1, 2, 3, 5);\n\n        expect(list.at(list.length - 1)).to.equal(list.last);\n    });\n\n    it('should have correct indexing with at(index, value)', () => {\n        const values = 'babel src --presets es2015 --out-dir ./build -s -w'.split(' '),\n            list = new LinkedList().append(...values),\n            listLength = list.length;\n\n        for (let i = 0, length = values.length; i < length; i += 1) {\n            list.at(i, i);\n            expect(list.at(i)).to.equal(i);\n        }\n\n        expect(list.first).to.equal(0);\n        expect(list.last).to.equal(values.length - 1);\n        expect(list.length).to.equal(listLength);\n    });\n\n    it('should have correct toArray', () => {\n\n        const values = ['test', true, null, 1, 2, 'testtest', { value: 'val', message: 'hello' }],\n            array = new LinkedList().append(...values).toArray();\n\n        expect(array instanceof Array).to.be.true;\n        expect(array.length).to.equal(values.length);\n        expect(JSON.stringify(array)).to.equal(JSON.stringify(values));\n    });\n});"]}